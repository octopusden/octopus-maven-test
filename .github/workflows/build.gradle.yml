name: CI-GRADLE

on:
  push:
    tags:
      - v**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      BUILD_VERSION:
        description: 'Build version'
        default: '1.0-SNAPSHOT'
        required: true
      IS_RELEASE:
        type: boolean
        description: 'Is release'
        default: 'false'
        required: true
      PUBLISH_DOCKER:
        type: boolean
        description: 'Publish docker'
        default: 'false'
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'gradle'
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
    - uses: actions-ecosystem/action-regex-match@v2
      id: version
      with:
        text: ${{  github.ref_name }}
        regex: '^v(.*)$'
        flags: gm
    - name: GitHub Tag Name
      run: |
        echo "Current version: ${{ steps.version.outputs.group1 }}"
    - name: Build with Gradle
      run: ./gradlew build --no-daemon
      env:
        BUILD_VERSION: ${{ steps.version.outputs.group1 }}
    - name: Publish to staging or snapshot
      if: ${{ github.event.inputs.IS_RELEASE }}
      run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --info
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        BUILD_VERSION: ${{ github.event.inputs.BUILD_VERSION }}
    - uses: actions/upload-artifact@v2
      if: ${{ github.event.inputs.PUBLISH_DOCKER }}
      with:
        name: artifact
        path: build/libs/octopus-test-${{ github.event.inputs.BUILD_VERSION }}.jar
#    - name: Publish to release
#      if: ${{ !endsWith(steps.version.outputs.group1, 'SNAPSHOT') }}
#      run: ./gradlew closeAndReleaseSonatypeStagingRepository --info
#      env:
#        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#        SONATYPE_PROFILE_ID: ${{ secrets.SONATYPE_PROFILE_ID }}
#        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
#        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
#        BUILD_VERSION: ${{ steps.version.outputs.group1 }}
  publishDocker:
    if: ${{ github.event.inputs.PUBLISH_DOCKER }}
    needs: build
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - uses: actions/checkout@v3
        name: Check out the repo
      - uses: actions/download-artifact@v3
        name: Download artifact
        with:
          name: artifact
          path: build/libs/octopus-test-${{ github.event.inputs.BUILD_VERSION }}.jar
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: JAR_FILE=octopus-test-${{ github.event.inputs.BUILD_VERSION }}.jar
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/octopus-test:${{ github.event.inputs.BUILD_VERSION }}

